The Team Contract is to be completed as a team. The form should be completed as part of Milestone 1.
The final section on the review of the team will be completed at the end of the project and must be turned
in by each member, however, you should complete the section as a team.
Expectations for team work are explained in the sections below. Read carefully, think through answers,
and commit to ensuring a positive work experience for all.
Instructions:
Discuss the prompts and write up your answers.
Add sections as needed (for extra team members).
Once done, click _Render_ in the build tab, commit, and push.
ONCE COMPLETE, SAVE AS A PDF -> TURN INTO D2L -> ASSIGNMENTS FOLDER -> Contract
Team Name: Super Awesome Engineering Team
Team Scribe: Conner Alubowicz
Team Members:

1. Conner Alubowicz
2. Benjamin Manninen
3. Arjun Kumar
4. Drew Halloran
5.
6.

# Team Working Contract

The contract is divided into several sections, and it is expected that each group will spend some time
generating at least 5 points for each section that **everyone agrees** to.

If you are not able to agree on these points, it is a sign that your group may become dysfunctional,
and you should seek advice from me (the course instructor) ASAP to resolve and mediate the discussion.

## Team Members

| Name     | Email Address |
| -------- | ------------- |
| Conner Alubowicz | calubowicz@arizona.edu |
| Benjamin Manninen | bmanninen@arizona.edu |
| Arjun Kumar | arjunkumar@arizona.edu |
| Drew Halloran | jahalloran0821@arizona.edu |
| Person 5 |               |
| Person 6 |               |

## Participation

All team members agree to fully participate in all aspects of the project.
To accomplish this goal, below are five concrete actions that we all agree to take:

1. Show up to every meeting unless prior notice is given.
2. Complete the tasks assigned to you in a quality manner.
3. Give every task your best shot (use outside resources), but ask for help from other members if needed.
4. Start working on tasks well before the due date.
5. Pull everytime before starting work, and push changes often.

## Communication

In this section, the team will come up with five actions they can take to ensure communication with
each other. Examples may include email, slack messages, texting, etc. Come up with five communication
strategies.
All team members agree to communicate openly and transparently during the project.
To accomplish this goal, below are five concrete actions that we all agree to take:

1. Use Slack as primary form of communication.
2. Use Email as secondary form of communication.
3. Notify team members in advance when you can't make it to a meeting.
4. Notify team members when you finish a task.
5. Always communicate with respect. 

## Meetings

In this section, the team will establish how they plan to meet to discuss and work on the project.
In real-world work, there are frequently "Team Stand-Up" meetings. These meetings are used for
team members to discuss the project and anything related to it such as progress, issues, questions, etc.
Below, you will fill out how you plan to meet regularly. Discuss your schedules and make a plan to meet.
For some, it may be best to meet virtually, though I highly encourage you to meet in-person as often as possible.
Compare schedules and share your plans for meeting.
All team members agree to meet regularly during the project.
To accomplish this goal, below are five concrete ideas that we all agree to regarding scheduling and
frequency of meetings:

1. Touch base every Thursday after class.
2. Meet twice in a week before a major due date. 
3. Final meeting before due date should be about checking over the deliverable and making sure everyone agrees it looks good. 
4. Important meetings can be scheduled on Tuesdays at 8pm.
5. Meetings will primarily be held on Zoom.

## Conduct

The Code of Conduct for this course aligns with that of the College of Information Science and
the University of Arizona. Please refer to the syllabus in D2L class documents if you have forgotten
our expectations around the Code of Coduct.
I will make it easy for you, the golden rule usually applies in most settings. If you would like to be treated
with respect, kindness, and empathy, be sure you are treating others that way.
Next, as I have noted in our class, it is important all of you are good data science representatives. I hope you
work to create inclusive spaces and take time to understand anyone who is different than you. There is a lot
of value in different perspectives in data science (all fields of STEAM).
Lastly, if issues arise with Code of Condcut behaviors, actions, etc., I would like to be informed immediately.
All team members agree to following the code of conduct when working with the team or any member from the INFO 511 class,
on any work, including studying and project work. Below are five concrete escalation steps that we all
agree to follow in the event that the code of conduct is violated by any member of the group
(Step 1 is the first thing you will do, and Step 5 is the last thing you will do).


1. Discuss issues with individual
2. Discuss issues as a group
3. Attempt to compromise (potentially by siloing features)
4. Group vote (majority rules) (tie break by coin flip)
5. Escalate to course staff for guidance

_N.B. Please do not hesitate to expand beyond 5 steps if needed._

## Conflict Management

Despite our best intentions, conflict may invariably arise within teammates. Disagreements in procedures and processes
happen and if handled well, can be good learning opportunities.
Take conflicts as an opportunity to practice communication and learn new things.
Do not allow conflict to escalate.
If it does escalate exponentially, please refer to the Code of Conduct plan.
I do want you to think of how you will navigate conflict before it escalates.
Additionally, many times disagreements and conflicts can easily be handled if a plan is in place.
Discuss amongst your team some conflict mitigation strategies (feel free to search online if needed)
and come up with 5 strategies all members of the team agree to follow in the event there is a conflict
within the group. Conflicts may include not showing up for regular meetings as planned, disagreement in how
to handle data or modeling approaches. Conflict can be many things, so think about what may come up and how
you plan to handle conflicts.
You may also include things you will NOT do in the event a conflict arises.

1. If a team member misses a meeting prior communication, and is unresponsive, they will accept any reasonable decisions made at the meeting in their absence. This will allow the team to make progress even if one member has an unexpected conflict
2. If any team member(s) feel that the work distribution is unbalanced, they should feel free to ask about other people work, as it is possible they underestimate what other people are working on. If they still feel there is an issue, we should further discuss it as a group, and attempt to find a work distribution that everyone is happy with.
3. If a team member believes they will not be able to complete the work they have been assigned by the group due to their personal schedule (not because their assignment is oversized), they should announce this as early as possible. Ideally this should occur far enough in advance that the group can either redistribute the workload, or adjust the target in order to meet the deadline.
4. If a team member is repeatedly non-communicative the group should have a meeting to discuss if there are any solutions (ie changing to a different messaging service) that may help. If this continues to cause problems the team should consider escalating to the course staff. In general team members should respond to messages within 24h maximum. If there is an upcoming deadline response time should be faster.
5. If a team member misses 3 meetings in a month without prior notice, the Professor will be notified. 


## Deadlines

All deadlines in the course are firm and final regarding the project milestones.
All team members need to be aware of the deadlines and a strategy is in place on how to mitigate any
possible missing deadline issues. Below, come up with five plans to ensure work is submitted
to avoid deadlines. Some examples may include having one person agree to always upload information to D2L
and the scribe will commit all work in GitHub. Another strategy may include all members ensuring
work is completed early so work can be submitted a day early. Another possibility is to have all members
"sign off" on the work and notice is sent that work was submitted. Think about who is the "back up"
person to submit work if the usual person is sick our out.
These are examples you may use, but you may also and should come up with your own team strategies.
Whatever is decided must be agreed upon by all team members.

1. Conner Alubowicz will submit all completed assignments into D2L
2. After submit, submitter should message in slack that it is done, all other members should respond confirming that they can see that it was submitted
3. Work should be pushed to github on a regular basis, but once all members agree that no additional changes are needed an additional commit will be added as the 'Final [milestone] commit' (or use tags to mark the existing commit)
4. Prior to every deadline, there will be a meeting to ensure the work is ready for submission. 
5. Work should be finished 48 hours prior to official due date. 

\*N.B.

## Git Workflow

There are many git workflows possible when working on a team project with many moving parts.
I suggest you discuss in your group some possible Git workflows.
[Here is a brief primer on some common options](https://www.atlassian.com/git/tutorials/comparing-workflows).
I suggest reading them, understanding them, and then selecting one.
You can explore and choose any you like, but if you cannot decide, I suggest using the "Feature Branch Workflow".

All team members agree to the [Name of chosen Git Workflow] workflow, and the following conventions
(e.g., master branch protection, at least X reviews before a pull request, at least N days before the
deadline etc...):

1. Contact team about any major push/pull conflicts.
2. Explore branching (if too complicated, will focus on centralized approach).
3. Do not push code that doesn't compile.
4. Always pull before starting work. 
5. Include an informative message about pushes. 

Signging the Contract:
Signing the contract is a demonstration that I understand the team plan on how to handle work, handle conflict, and have
an understanding of strategies to mitigate issues.
The team is also aware of the Code of Conduct and will abide by the code set by the College of Information Science and
the University of Arizona.

Team member name:

1. Conner Alubowicz
2. Drew Halloran
3. Benjamin Manninen
4. Arjun Kumar
5.
6.

Turn in the first section for Milestone 1.
Complete Final Review section and turn in with the final project. Each team member should upload to
D2L assignments.

## Final Reflection on Workload Distribution

** This section should be completed AFTER Milestone 4 is done and submitted!
Each person on the team should complete this final reflection section and save as a PDF and submit
it to D2L**

In this section we will ask you to self-report the workload distribution to various categories of tasks.
For each of the categories, we want you to report the approximate workload distribution, split by the
milestone. This means, I am asking you to reflect on how much effort you ad your team members contributed.
You should complete this as a team and come up with similar percentages.
If there is a workload issue, I expect I will have heard about it before this is submitted. In the event that
workload distribution was not evenly divided, I have have created a space for you to share that information.
As noted, I expect you to discuss these issues as a team before this becomes and issue. If team self maangement
does not work, I expect you to have talked to me. This reflection does not mean that I will change individual grades,
however, in egregious mishaps, I may talk with whoever did not contribute fairly.
Moreover, I do not want to hear about someone bulldozing through the project and doing it the way they want, excluding
others on the team.
Therefore, I do want you to all consider this part as a project self-reflection, so please be sure to
work well and contribute.
Here are the tables you are expected to complete (the first one is pre-filled in so you can see what
we're expecting):

### Milestone 1

| Category        | Team member 1 | Team member 2 | Team member 3 | Team member 4 |
| --------------- | ------------- | ------------- | ------------- | ------------- |
| Set up Folder   | 60%           | 40%           | -             | -             |
| Documentation   | 10%           | 10%           | 40%           | 40%           |
| Troubleshooting |               | -             | -             | -             |
|                 |               |               |               |

---

Brief notes/explanations (optional):

- No troubleshooting was needed for Milestone 1
- Member 1 and Member did most of the repository setup, whereas 3 and 4 did most of the documentation

### Milestone 2

| Category                  | Team member 1 | Team member 2 | Team member 3 | Team member 4 |
| ------------------------- | ------------- | ------------- | ------------- | ------------- |
| Documentation/Reflection  |               |               |               |               |
| Writing new code          |               |               |               |               |
| Code Reviews/editing      |               |               |               |               |
| Project Management Plan   |               |               |               |               |
| Testing & Troubleshooting |               |               |               |               |
| Proposal Written Part     |               |               |               |               |

Brief notes/explanations (optional):

### Milestone 3

| Category                  | Team member 1 | Team member 2 | Team member 3 | Team member 4 |
| ------------------------- | ------------- | ------------- | ------------- | ------------- |
| Documentation/Reflection  |               |               |               |               |
| Writing new code          |               |               |               |               |
| Code Reviews/editing      |               |               |               |               |
| Project Management        |               |               |               |               |
| Testing & Troubleshooting |               |               |               |               |

Brief notes/explanations (optional):

### Milestone 4

| Category                  | Team member 1 | Team member 2 | Team member 3 | Team member 4 |
| ------------------------- | ------------- | ------------- | ------------- | ------------- |
| Documentation/Reflection  |               |               |               |               |
| Writing new code          |               |               |               |               |
| Code Reviews/editing      |               |               |               |               |
| Project Management        |               |               |               |               |
| Testing & Troubleshooting |               |               |               |               |
| Project Written Seciont   |               |               |               |               |
| Project Presentation      |               |               |               |               |
